{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleSubmit","e","preventDefault","props","onSubmit","reset","handleChange","currentTarget","value","setState","this","className","s","form","label","htmlFor","type","pattern","title","required","onChange","id","input","button","Component","Filter","filterInputId","ContactListItem","onDeleteContact","item","onClick","ContactList","contacts","list","map","App","filter","addContact","newContact","find","contact","alert","changeFilter","findContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2180f81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__OtWkQ\",\"input\":\"Filter_input__oDQ2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__v5-q7\",\"label\":\"ContactForm_label__2kU6u\",\"input\":\"ContactForm_input__2E18F\",\"button\":\"ContactForm_button__3F_Od\"};","import React, { Component } from 'react';\nimport PropsType from 'prop-types';\nimport shortid from 'shortid';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n    name: '',\n    number: '',\n  };\n\n    nameInputId = shortid.generate();\n    numberInputId = shortid.generate();\n\n    handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n    }\n    \n    handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    }\n    \n     reset() {\n    this.setState({\n      name: '',\n      number: ''\n    })\n    }\n    \n    render() {\n        const { name, number } = this.state;\n        return (\n            <form className={s.form}\n                onSubmit={this.handleSubmit}>\n                <label className={s.label}\n                    htmlFor={this.nameInputId}>\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={name}\n                        onChange={this.handleChange}\n                        id={this.nameInputId}\n                        className={s.input}\n                    />\n                </label>\n\n                <label className={s.label}\n                    htmlFor={this.numberInputId}>\n                    Number\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        value={number}\n                        onChange={this.handleChange}\n                        id={this.numberInputId}\n                        className={s.input}\n                    />\n                </label>\n\n                <button\n                    className={s.button}\n                    type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        )\n    }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n    onSubmit: PropsType.func.isRequired,\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nclass Filter extends Component {\n\n    filterInputId = shortid.generate();\n\n    render() {\n        return (\n            <label className={s.label} htmlFor={this.filterInputId}>\n                Find contacts by name\n                <input className={s.input}\n                    type='text'\n                    value={this.props.value}\n                    onChange={this.props.onChange}\n                />\n            </label>\n        )\n    }\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n    return (\n        <li className={s.item}>\n            {name} : {number}\n            <button className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n        >\n            Delete\n        </button>\n        </li>\n    )\n}\n\nexport default ContactListItem;\n\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\n\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({contacts, onDeleteContact}) => {\n    return (\n        <ul className={s.list}>\n            {contacts().map(({ id, name, number }) => {\n                return (\n                    <ContactListItem\n                        key={id}\n                        id={id}\n                        name={name}\n                        number={number}\n                        onDeleteContact={onDeleteContact}\n                    />\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n    contacts: PropTypes.func.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\n\nclass App extends Component {\n   state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`)\n      return;\n    }\n  \n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n  \n   changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  \n  findContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  \n  render() {\n    const { filter, contacts } = this.state;\n    const findContacts = this.findContacts\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n        <h2 className=\"subtitle\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={findContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__30usW\",\"item\":\"ContactList_item__QciBT\",\"text\":\"ContactList_text__3wD4y\",\"span\":\"ContactList_span__E1gmd\",\"button\":\"ContactList_button__2ywpw\",\"heart\":\"ContactList_heart__1npwY\"};"],"sourceRoot":""}